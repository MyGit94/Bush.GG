<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 네임스페이스(사용영역) 설정 -->
<mapper namespace="com.pinkward.bushgg.domain.article.mapper.ArticleMapper">

    <!-- 게시판 등록 -->
    <insert id="create" parameterType="ArticleDTO">
        --#7. 자유게시판 신규글 등록  테스트
        INSERT INTO article
        (articleid,
         writer,
         boardid,
         subject,
         content,
         regdate,
         hitcount,
         passwd,
         group_no,
         level_no,
         order_no)
        VALUES (article_id_seq.NEXTVAL,
                '테스트',
                #{boardId},
                #{subject},
                #{content},
                SYSDATE,
                '0',
                '1111',
                article_id_seq.CURRVAL,
                0,
                0)
    </insert>

    <!-- 게시글 전체 목록 조회 -->
    <select id="findAll" resultType="ArticleDTO">
        SELECT articleid,
               writer,
               boardid,
               subject,
               content,
               regdate,
               hitcount,
               passwd,
               group_no,
               level_no,
               order_no
        FROM article
        ORDER BY articleid DESC
    </select>

    <!--    게시글 상세보기 -->
    <select id="detail" parameterType="int" resultType="ArticleDTO">
        SELECT articleid,
               boardid,
               writer,
               subject,
               content,
               TO_CHAR(regdate, 'YYYY-MM-DD hh:mm:ss') regdate,
               group_no,
               hitcount
        FROM article
        WHERE articleid = #{articleId}
    </select>

    <!--    댓글읽기-->
    <select parameterType="int" id="readComment" resultType="ArticleDTO">
        SELECT subject,
               writer,
               content,
               passwd,
               TO_CHAR(regdate, 'YYYY-MM-DD hh:mm:ss') as "regdate",
               group_no,
               level_no,
               order_no
        FROM article
        WHERE level_no >= 1
          AND group_no = #{groupNo}ORDER BY order_no ASC
    </select>

    <select id="getCountAll" resultType="int">
        SELECT COUNT(articleid)
        FROM article
    </select>


    <!-- 댓글 등록 -->
    <insert parameterType="ArticleDTO" id="createComment">
        INSERT INTO article
        (articleid,
         boardid,
         writer,
         subject,
         content,
         passwd,
         group_no,
         level_no,
         order_no)
        VALUES (article_id_seq.NEXTVAL,
                #{boardId},
                #{writer},
                #{subject},
                #{content},
                #{passwd},
                #{groupNo},
                #{levelNo},
                (SELECT MAX(order_no) + 1
                 FROM article
                 WHERE board_id = #{boardId}
                   AND group_no = #{groupNo}))
    </insert>


    <!--    페이징 -->
    <select id="findByAll" resultType="ArticleDTO" parameterType="PageParams">
        SELECT articleid,
               subject,
               writer,
               regdate,
               hitcount
        FROM (SELECT CEIL(rownum / #{pageParams.elementSize}) request_page,
                     articleid,
                     subject,
                     writer,
                     TO_CHAR(regdate, 'YYYY-MM-DD hh:mm:ss')  regdate,
                     hitcount
              FROM (SELECT articleid,
                           subject,
                           writer,
                           regdate,
                           hitcount
                    FROM article
                    ORDER BY group_no DESC, order_no ASC, level_no ASC))
        WHERE request_page = #{pageParams.requestPage}
    </select>


    <!-- 게시글 수정 -->
    <update id="update" parameterType="ArticleDTO">
        UPDATE article
        SET content = #{content}
        WHERE boardid = #{boardId}
          AND writer = #{writer}
          AND passwd = #{passwd}
    </update>

    <!-- 삭제 -->
    <delete id="removeComment" parameterType="ArticleDTO">
        DELETE
        FROM article
        WHERE article_id = #{articleId}
          AND passwd = #{passwd}
    </delete>


</mapper>