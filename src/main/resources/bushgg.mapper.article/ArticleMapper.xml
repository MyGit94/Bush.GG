<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 네임스페이스(사용영역) 설정 -->
<mapper
        namespace="com.pinkward.bushgg.domain.article.Mapper.ArticleMapper">

    <!-- 게시판 등록 -->
    <insert id="create" parameterType="ArticleDTO">
        INSERT INTO article
        (article_id,
         board_id,
         writer,
         subject,
         content,
         passwd,
         group_no,
         level_no,
         order_no)
        VALUES (article_id_seq.NEXTVAL,
                #{boardId},
                #{writer},
                #{subject},
                #{content},
                #{passwd},
                article_id_seq.CURRVAL,
                #{levelNo},
                #{orderNo})
    </insert>

    <!-- 게시글 전체 목록 조회 -->
    <select id="findAll" resultType="ArticleDTO">
        SELECT article_id,
               subject,
               writer,
               regdate,
               hitcount,
               passwd,
               group_no,
               level_no,
               order_no
        FROM article
        WHERE  board_id = 10
        ORDER  BY article_id DESC
    </select>

    <!--댓글 읽어오기 -->
    <select id="readComment" resultType="ArticleDTO" parameterType="int">
        SELECT subject,
               writer,
               content,
               passwd,
               TO_CHAR(regdate, 'YYYY-MM-DD hh:mm:ss') as "regdate",
               group_no,
               level_no,
               order_no
        FROM article
        WHERE level_no >= 1 AND group_no = #{groupNo}
        ORDER BY order_no ASC
    </select>

    <!-- 전체 게시글 갯수 -->
    <select id="getCountAll" resultType="int">
        SELECT COUNT(article_Id)
        FROM  article
    </select>

    <!-- 댓글 등록 -->
    <insert id="createComment" parameterType="ArticleDTO">
        INSERT INTO article
        (article_id,
         board_id,
         writer,
         subject,
         content,
         passwd,
         group_no,
         level_no,
         order_no)
        VALUES      (
                        article_id_seq.NEXTVAL,
                        #{boardId},
                        #{writer},
                        #{subject},
                        #{content},
                        #{passwd},
                        #{groupNo},
                        #{levelNo},
                        (SELECT MAX(order_no)+1
                         FROM   article
                         WHERE  board_id = #{boardId}
                           AND group_no = #{groupNo}))
    </insert>



    <!-- 대댓글 등록 -->
    <insert id="commentByComment" parameterType="ArticleDTO">
        INSERT INTO article
        (article_id,
         board_id,
         writer,
         subject,
         content,
         passwd,
         group_no,
         level_no,
         order_no)
        VALUES      (
                        article_id_seq.NEXTVAL,
                        #{boardId},
                        #{writer},
                        #{subject},
                        #{content},
                        #{passwd},
                        #{groupNo},
                        (SELECT MAX(level_no) + 1
                         FROM   article
                         WHERE  board_id = #{boardId}
                           AND group_no = #{groupNo}) ,
                        (SELECT MAX(order_no) + 1
                         FROM   article
                         WHERE  board_id = #{boardId}
                           AND group_no = #{groupNo}))
    </insert>

    <!-- 삭제 -->
    <delete id="removeComment" parameterType="ArticleDTO">
        DELETE FROM article
        WHERE article_id = #{articleId}
          AND passwd = #{passwd}
    </delete>
    <!-- 삭제2 -->


    <!-- 게시글 수정 -->
    <update id="update" parameterType="ArticleDTO">
        UPDATE article
        SET content = #{content}
        WHERE board_id = #{boardId}
          AND	  writer = #{writer}
          AND	  passwd = #{passwd}
    </update>

    <!-- 게시글 상세보기 -->
    <select id="detail" parameterType="int" resultType="ArticleDTO">
        SELECT article_id as "articleId",
               board_id as "boardId",
               writer,
               subject,
               content,
               passwd,
               TO_CHAR(regdate, 'YYYY-MM-DD hh:mm:ss') regdate ,
               group_no as "groupNo",
               hitcount
        FROM   article
        WHERE  article_id = #{articleId}
    </select>

    <select id="findByAll" resultType="ArticleDTO" parameterType="PageParams">
        SELECT article_id,
        subject,
        writer,
        regdate,
        hitcount
        FROM   (SELECT  CEIL(rownum / #{pageParams.elementSize}) request_page,
        article_id,
        subject,
        writer,
        TO_CHAR(regdate, 'YYYY-MM-DD hh:mm:ss') regdate,
        hitcount
        FROM   (SELECT article_id,
        subject,
        writer,
        regdate,
        hitcount
        FROM    article
        <!--                    	WHERE   <choose>-->
        <!--        							<when test="type == 'writer'">-->
        <!--            							writer = #{input}-->
        <!--        							</when>-->
        <!--        							<when test="type == 'subject'">-->
        <!--            							subject LIKE '%' || #{input} || '%'-->
        <!--        							</when>-->
        <!--        							<when test="type == 'content'">-->
        <!--            							content LIKE '%' || #{writer} || '%'-->
        <!--        							</when>-->
        <!--    							</choose>-->
        <!--    							AND board_id = #{boardId}-->
        ORDER  BY group_no DESC, order_no ASC, level_no ASC))
        WHERE  request_page = #{pageParams.requestPage}
    </select>

</mapper>